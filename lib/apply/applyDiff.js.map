{"version":3,"sources":["../../src/apply/applyDiff.js"],"names":[],"mappings":";;;;;;kBAmBe,UAAS,OAAT,EAAkB;AAAA,MACvB,IADuB,GACd,OADc,CACvB,IADuB;;AAE/B,MAAM,UAAU,gBAAE,OAAF,CAAU,YAAV,EAAwB,CAAC,OAAD,CAAxB,CAAhB;;AAEA,MAAM,WAAW,gBAAE,GAAF,CAAM,gBAAE,OAAF,CAAU,OAAV,EAAmB,UAAnB,CAAN,EAAsC,gBAAE,IAAF,CAAO,IAAP,CAAtC,CAAjB;;AAEA,SAAO,QAAQ,GAAR,CAAY,QAAZ,EACJ,IADI,CACC;AAAA,WAAK,OAAL;AAAA,GADD,CAAP;AAED,C;;AA3BD;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,IAAM,aAAa,gBAAE,IAAF,CAAO,gBAAE,IAAT,EAAe;AAChC,SAAO,kEADyB;AAEhC,eAAa,EAFmB,EAAf,CAAnB;;AAKA,SAAS,YAAT,CAAsB,OAAtB,EAA+B,SAA/B,EAA0C;AACxC,SAAO,QAAQ,GAAR,CAAY,gBAAE,GAAF,CAAM,UAAC,EAAD;AAAA,WAAQ,GAAG,OAAH,CAAR;AAAA,GAAN,EAA2B,SAA3B,CAAZ,CAAP;AACD","file":"applyDiff.js","sourcesContent":["import R from 'ramda'\n\nimport addRules from '../auth0/addRules'\nimport updateRules from '../auth0/updateRules'\nimport removeRules from '../auth0/removeRules'\n\nimport addConnections from '../auth0/addConnections'\nimport updateConnections from '../auth0/updateConnections'\nimport removeConnections from '../auth0/removeConnections'\n\nconst getActions = R.flip(R.prop)({\n  rules: [addRules, updateRules, removeRules],\n  connections: [],  //[addConnections, updateConnections, removeConnections],\n});\n\nfunction parallelizer(context, functions) {\n  return Promise.all(R.map((fn) => fn(context), functions));\n}\n\nexport default function(context) {\n  const { diff } = context;\n  const applier = R.partial(parallelizer, [context]);\n\n  const promises = R.map(R.compose(applier, getActions), R.keys(diff));\n\n  return Promise.all(promises)\n    .then(_ => context);\n}\n"]}