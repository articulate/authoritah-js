{"version":3,"sources":["../../src/auth0/addRules.js"],"names":[],"mappings":";;;;;kBAGwB,Q;;AAHxB;;;;AACA;;;;;;AAEe,SAAS,QAAT,CAAkB,OAAlB,EAA2B;AAAA,MAChC,MADgC,GACmB,OADnB,CAChC,MADgC;AAAA,MACP,IADO,GACmB,OADnB,CACxB,IADwB,CAChB,KADgB,CACP,IADO;AAAA,MACU,EADV,GACmB,OADnB,CACG,GADH,CACU,EADV;;;AAGxC,MAAM,QAAQ,SAAR,KAAQ,CAAC,EAAD;AAAA,WAAQ,GAAG,aAAH,EAAkB,EAAlB,CAAR;AAAA,GAAd;AACA,MAAM,UAAU,gBAAE,OAAF,CAAU,gBAAE,QAAF,CAAW,KAAX,EAAkB,gBAAE,IAAF,CAAO,IAAP,CAAlB,EAAgC,OAAO,KAAP,CAAa,MAA7C,CAAV,EAAgE,2BAAY,QAAZ,CAAhE,CAAhB;;AAEA,SAAO,QAAQ,GAAR,CAAY,gBAAE,GAAF,CAAM,OAAN,EAAe,IAAf,CAAZ,EACJ,IADI,CACC;AAAA,WAAK,OAAL;AAAA,GADD,CAAP;AAED","file":"addRules.js","sourcesContent":["import R from 'ramda'\nimport prepareRule from './prepareRule'\n\nexport default function addRules(context) {\n  const { client, diff: { rules: { adds } }, say: { ok } } = context;\n\n  const print = (id) => ok('Added rule ', id);\n  const addRule = R.compose(R.composeP(print, R.prop('id'), client.rules.create), prepareRule('create'));\n\n  return Promise.all(R.map(addRule, adds))\n    .then(_ => context);\n}\n"]}