{"version":3,"sources":["../../src/auth0/prepareConnection.js"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;;;AAEA,IAAM,eAAe,gBAAE,IAAF,CAAO,CAAC,SAAD,EAAY,MAAZ,EAAoB,UAApB,CAAP,CAArB;AACA,IAAM,kBAAkB,gBAAE,IAAF,CAAO,CAAC,SAAD,EAAY,iBAAZ,CAAP,CAAxB;;AAEA,SAAS,kBAAT,CAA4B,UAA5B,EAAwC;AAAA,MAC9B,IAD8B,GACrB,UADqB,CAC9B,IAD8B;;AAEtC,SAAO,gBAAE,KAAF,CAAQ,MAAR,EAAgB,KAAK,OAAL,CAAa,KAAb,EAAoB,GAApB,CAAhB,EAA0C,UAA1C,CAAP;AACD;;AAED,SAAS,iBAAT,CAA2B,IAA3B,EAAiC;AAC/B,MAAM,SAAS,gBAAE,MAAF,CAAS,QAAT,EAAmB,IAAnB,IAA2B,eAA3B,GAA6C,YAA5D;AACA,SAAO,gBAAE,OAAF,CAAU,MAAV,EAAkB,kBAAlB,iCAAP;AACD;;kBAEc,iB","file":"prepareConnection.js","sourcesContent":["import R from 'ramda'\nimport { combineUuid } from '../utils/transformUuidName'\n\nconst filterFields = R.omit(['options', 'name', 'strategy'])\nconst filterForUpdate = R.pick(['options', 'enabled_clients']);\n\nfunction joinNameWhitespace(connection) {\n  const { name } = connection;\n  return R.assoc('name', name.replace(/\\s/g, '-'), connection);\n}\n\nfunction prepareConnection(type) {\n  const filter = R.equals('update', type) ? filterForUpdate : filterFields;\n  return R.compose(filter, joinNameWhitespace, combineUuid);\n}\n\nexport default prepareConnection;\n"]}