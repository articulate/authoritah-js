{"version":3,"sources":["../../src/apply/loadManifest.js"],"names":[],"mappings":";;;;;kBAcwB,Y;;AAdxB;;;;AACA;;;;AACA;;;;AACA;;;;;;;AAGA,IAAM,wBAAwB,gBAAE,IAAF,CAAO,gBAAE,QAAF,CAAW,CAAC,SAAD,EAAY,eAAZ,CAAX,CAAP,EAC5B,gBAAE,aAAF,CAAgB,UAAC,CAAD,EAAI,GAAJ,EAAS,MAAT;AAAA,SAAoB,0BAAW,GAAX,EAAgB,MAAhB,EAAwB,GAAxB,CAApB;AAAA,CAAhB,CAD4B,CAA9B;;AAGA,IAAM,kBAAkB;AACtB,SAAO,gBAAE,GAAF,CAAM,0BAAW,QAAX,CAAN,CADe;AAEtB,eAAa,gBAAE,GAAF,CAAM,qBAAN;AAFS,CAAxB;;AAKe,SAAS,YAAT,CAAsB,QAAtB,EAAgC;AAC7C,MAAM,SAAS,SAAS,QAAT,CAAkB,MAAlB,IAA4B,KAAK,KAAjC,GAAyC,iBAAK,IAA7D;AACA,MAAM,WAAW,gBAAE,OAAF,CAAU,MAAV,EAAkB,aAAG,YAArB,EAAmC,QAAnC,CAAjB;;AAEA,SAAO,gBAAE,KAAF,CAAQ,UAAR,EAAoB,gBAAE,MAAF,CAAS,eAAT,EAA0B,QAA1B,CAApB,CAAP;AACD","file":"loadManifest.js","sourcesContent":["import fs from 'fs'\nimport R from 'ramda'\nimport yaml from 'js-yaml'\nimport loadScript from '../utils/loadScript'\n\n// Connections require a bit of manipulation to work with the `loadScript` function expectations\nconst loadConnectionScripts = R.over(R.lensPath(['options', 'customScripts']),\n  R.mapObjIndexed((_, key, object) => loadScript(key, object)[key]));\n\nconst transformations = {\n  rules: R.map(loadScript('script')),\n  connections: R.map(loadConnectionScripts),\n}\n\nexport default function loadManifest(filename) {\n  const parser = filename.endsWith(\"json\") ? JSON.parse : yaml.load;\n  const manifest = R.compose(parser, fs.readFileSync)(filename);\n\n  return R.assoc('manifest', R.evolve(transformations, manifest));\n}\n"]}