{"version":3,"sources":["../../src/auth0/updateConnections.js"],"names":[],"mappings":";;;;;kBAGwB,iB;;AAHxB;;;;AACA;;;;AAEe,SAAS,iBAAT,CAA2B,OAA3B,EAAoC;AAAA,MACzC,MADyC,GACuB,OADvB,CACzC,MADyC;AAAA,MACV,OADU,GACuB,OADvB,CACjC,IADiC,CACzB,WADyB,CACV,OADU;AAAA,MACU,MADV,GACuB,OADvB,CACG,GADH,CACU,MADV;;;AAGjD,MAAM,QAAQ,SAAR,KAAQ;AAAA,QAAE,IAAF,QAAE,IAAF;AAAA,WAAY,OAAO,qBAAP,EAA8B,IAA9B,CAAZ;AAAA,GAAd;AACA,MAAM,gBAAgB,gBAAE,OAAF,CAAU,OAAO,WAAP,CAAmB,MAA7B,sCAAtB;AACA,MAAM,mBAAmB,gBAAE,QAAF,CAAW,KAAX,EAAkB,aAAlB,CAAzB;;AAEA,SAAO,QAAQ,GAAR,CAAY,gBAAE,GAAF,CAAM,gBAAN,EAAwB,OAAxB,CAAZ,EACJ,IADI,CACC;AAAA,WAAK,OAAL;AAAA,GADD,CAAP;AAED","file":"updateConnections.js","sourcesContent":["import R from 'ramda'\nimport { prepareForUpdate } from './parsers/prepareConnection'\n\nexport default function updateConnections(context) {\n  const { client, diff: { connections: { changes } }, say: { notice } } = context;\n\n  const print = ({name}) => notice('Updated connection ', name);\n  const updateWrapper = R.compose(client.connections.update, prepareForUpdate);\n  const updateConnection = R.composeP(print, updateWrapper);\n\n  return Promise.all(R.map(updateConnection, changes))\n    .then(_ => context);\n}\n"]}