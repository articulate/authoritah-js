{"version":3,"sources":["../../src/apply/diff.js"],"names":[],"mappings":";;;;;kBAqBwB,I;;AArBxB;;;;AASA;;;;AACA;;;;AARA,IAAM,iBAAiB,CACrB,QADqB,EAErB,OAFqB,EAGrB,SAHqB,EAIrB,MAJqB,CAAvB;;AAUA,IAAM,WAAW,gBAAE,IAAF,CAAO,cAAP,CAAjB;AACA,IAAM,kBAAkB,SAAlB,eAAkB,CAAC,GAAD,EAAM,GAAN;AAAA,SAAc,gBAAE,MAAF,CAAS,SAAS,GAAT,CAAT,EAAwB,SAAS,GAAT,CAAxB,CAAd;AAAA,CAAxB;AACA,IAAM,WAAW,SAAX,QAAW,CAAC,GAAD,EAAM,GAAN;AAAA,SAAc,gBAAE,GAAF,CAAM,GAAN,EAAW,GAAX,CAAd;AAAA,CAAjB;AACA,IAAM,YAAY,gBAAE,IAAF,CAAO,QAAP,EAAiB,gBAAE,UAAF,CAAa,eAAb,CAAjB,CAAlB;;AAEA,IAAM,QAAQ,gBAAE,OAAF,CAAU,gBAAE,OAAF,CAAU,gBAAE,IAAF,CAAO,MAAP,CAAV,CAAV,EAAqC,gBAAE,MAAvC,CAAd;AACA,IAAM,cAAe,gBAAE,MAAF,CAAS,gBAAE,KAAF,CAAQ,SAAR,CAAT,CAArB;AACA,IAAM,aAAa,gBAAE,cAAF,CAAiB,gBAAE,OAAF,CAAU,MAAV,CAAjB,CAAnB;;AAEe,SAAS,IAAT,CAAc,OAAd,EAAuB;AAAA,MAC5B,QAD4B,GACK,OADL,CAC5B,QAD4B;AAAA,MAClB,KADkB,GACK,OADL,CAClB,KADkB;AAAA,MACJ,EADI,GACK,OADL,CACX,GADW,CACJ,EADI;;AAEpC,MAAM,UAAU,gBAAE,OAAF,CAAU,gBAAE,MAAZ,EAAoB,gBAAE,GAAF,CAAM,gBAAE,QAAR,CAApB,EAAuC,WAAvC,EAAoD,KAApD,EAA2D,KAA3D,EAAkE,QAAlE,CAAhB;;AAEA,MAAM,OAAO;AACX,oBADW;AAEX,aAAS,WAAW,KAAX,EAAkB,QAAlB,CAFE;AAGX,UAAM,WAAW,QAAX,EAAqB,KAArB;AAHK,GAAb;;AAMA,MAAG,gBAAE,GAAF,CAAM,gBAAE,OAAR,EAAiB,gBAAE,MAAF,CAAS,IAAT,CAAjB,CAAH,EAAqC;AAAE,OAAG,sBAAH;AAA6B;;AAEpE,SAAO,gBAAE,KAAF,CAAQ,IAAR,EAAc,OAAd,CAAP;AACD","file":"diff.js","sourcesContent":["import R from 'ramda'\n\nconst COMPARE_FIELDS = [\n  'script',\n  'stage',\n  'enabled',\n  'name',\n]\n\nimport clc from 'cli-color'\nimport { inspect } from 'util'\n\nconst selector = R.pick(COMPARE_FIELDS);\nconst selectiveEquals = (lhs, rhs) => R.equals(selector(lhs), selector(rhs));\nconst allExist = (lhs, rhs) => R.and(lhs, rhs);\nconst isChanged = R.both(allExist, R.complement(selectiveEquals));\n\nconst group = R.compose(R.groupBy(R.prop('uuid')), R.concat);\nconst findChanges =  R.filter(R.apply(isChanged));\nconst difference = R.differenceWith(R.eqProps('uuid'));\n\nexport default function diff(context) {\n  const { manifest, rules, say: { ok } } = context;\n  const changes = R.compose(R.values, R.map(R.mergeAll), findChanges, group)(rules, manifest);\n\n  const diff = {\n    changes,\n    removes: difference(rules, manifest),\n    adds: difference(manifest, rules)\n  };\n\n  if(R.all(R.isEmpty, R.values(diff))) { ok(\"No changes to apply!\"); }\n\n  return R.merge(diff, context);\n}\n"]}