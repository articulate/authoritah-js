{"version":3,"sources":["../../../src/auth0/connections/parseConnections.js"],"names":[],"mappings":";;;;;kBAawB,gB;;AAbxB;;;;AACA;;;;AAEA,IAAM,eAAe,gBAAE,IAAF,CAAO,CAC1B,MAD0B,EAE1B,IAF0B,EAG1B,SAH0B,EAI1B,UAJ0B,EAK1B,iBAL0B,CAAP,CAArB;AAOA,IAAM,gBAAgB,gBAAE,IAAF,CAAO,gBAAE,QAAF,CAAW,SAAX,CAAP,EAA8B,gBAAE,IAAF,CAAO,CAAC,eAAD,CAAP,CAA9B,CAAtB;AACA,IAAM,gBAAgB,gBAAE,GAAF,CAAM,gBAAE,OAAF,iCAAuB,YAAvB,EAAqC,aAArC,CAAN,CAAtB;;AAEe,SAAS,gBAAT,CAA0B,OAA1B,EAAmC;AAAA,MACxC,WADwC,GACxB,OADwB,CACxC,WADwC;;;AAGhD,SAAO,gBAAE,KAAF,CAAQ,aAAR,EAAuB,cAAc,WAAd,CAAvB,EAAmD,OAAnD,CAAP;AACD","file":"parseConnections.js","sourcesContent":["import R from 'ramda';\nimport { extractUuid } from '../../utils/transformUuidName'\n\nconst filterFields = R.pick([\n  'name',\n  'id',\n  'options',\n  'strategy',\n  'enabled_clients'\n]);\nconst filterOptions = R.over(R.lensProp('options'), R.pick([\"customScripts\"]));\nconst transformEach = R.map(R.compose(extractUuid, filterFields, filterOptions));\n\nexport default function parseConnections(context) {\n  const { connections } = context;\n\n  return R.assoc('connections', transformEach(connections), context);\n}\n"]}