{"version":3,"sources":["../../src/dump/associateClientConnections.js"],"names":[],"mappings":";;;;;kBAEwB,0B;;AAFxB;;;;;;AAEe,SAAS,0BAAT,CAAoC,OAApC,EAA6C;AAAA,MAClD,OADkD,GACtC,OADsC,CAClD,OADkD;;AAE1D,MAAM,cAAc,SAAd,WAAc,CAAC,GAAD;AAAA,WAAS,gBAAE,MAAF,CAAS,gBAAE,OAAF,CACpC,gBAAE,IAAF,CAAO,gBAAE,QAAT,EAAmB,GAAnB,CADoC,EAEpC,gBAAE,IAAF,CAAO,WAAP,CAFoC,CAAT,EAG1B,OAH0B,CAAT;AAAA,GAApB;AAIA,MAAM,cAAc,gBAAE,OAAF,CAAU,gBAAE,KAAF,CAAQ,MAAR,CAAV,EAA2B,WAA3B,CAApB;AACA,MAAM,kBAAkB,gBAAE,IAAF,CAAO,gBAAE,QAAF,CAAW,iBAAX,CAAP,EAAsC,WAAtC,CAAxB;;AAEA,SAAO,gBAAE,IAAF,CAAO,gBAAE,QAAF,CAAW,aAAX,CAAP,EAAkC,gBAAE,GAAF,CAAM,eAAN,CAAlC,EAA0D,OAA1D,CAAP;AACD","file":"associateClientConnections.js","sourcesContent":["import R from 'ramda'\n\nexport default function associateClientConnections(context) {\n  const { clients } = context;\n  const findClients = (ids) => R.filter(R.compose(\n    R.flip(R.contains)(ids),\n    R.prop('client_id')\n  ), clients);\n  const retrieveIds = R.compose(R.pluck('uuid'), findClients);\n  const associateClient = R.over(R.lensProp('enabled_clients'), retrieveIds);\n\n  return R.over(R.lensProp('connections'), R.map(associateClient), context);\n}\n"]}