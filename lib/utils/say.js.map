{"version":3,"sources":["../../src/utils/say.js"],"names":[],"mappings":";;;;;;;;kBAgBwB,G;;AAhBxB;;AACA;;;;AACA;;;;AAEA,IAAM,WAAW;AACf,SAAO,CAAE,QAAQ,KAAV,EAAiB,mBAAG,GAAH,CAAO,IAAxB,CADQ;AAEf,QAAM,CAAE,QAAQ,IAAV,EAAgB,mBAAG,MAAH,CAAU,MAA1B,CAFS;AAGf,MAAI,CAAE,QAAQ,GAAV,EAAe,mBAAG,KAAlB,CAHW;AAIf,UAAQ,CAAE,QAAQ,GAAV,EAAe,mBAAG,IAAlB,CAJO;AAKf,OAAK,CAAE,QAAQ,GAAV;AALU,CAAjB;;AAQA,IAAM,qBAAqB,SAArB,kBAAqB,CAAC,GAAD;AAAA,SAAS,mBAAQ,GAAR,EAAa,EAAE,QAAQ,KAAV,EAAb,CAAT;AAAA,CAA3B;AACA,IAAM,YAAY,mBAAO,eAAG,MAAH,CAAP,mBAA6B,kBAA7B,CAAlB;AACA,IAAM,UAAU,SAAV,OAAU;AAAA,oCAAI,GAAJ;AAAI,OAAJ;AAAA;;AAAA,SAAY,oBAAQ,iBAAK,EAAL,CAAR,EAAkB,gBAAI,SAAJ,CAAlB,EAAkC,GAAlC,CAAZ;AAAA,CAAhB;;AAEe,SAAS,GAAT,CAAa,OAAb,EAAsB;AACnC,MAAM,QAAQ,mBAAO,IAAP,EAAa,CAAC,QAAD,EAAW,OAAX,CAAb,EAAkC,OAAlC,CAAd;;AAEA,SAAO,gBAAI,gBAAoB;AAAA;;AAAA,QAAlB,OAAkB;AAAA,QAAT,GAAS;;AAC7B,QAAM,aAAa,QAAQ,IAAR,CAAa,OAAb,CAAnB;;AAEA,QAAG,CAAC,GAAJ,EAAS;AAAE,aAAO,UAAP;AAAoB;;AAE/B,WAAO,QAAQ,oBAAQ,UAAR,EAAoB,GAApB,EAAyB,OAAzB,CAAR,GAA4C,UAAnD;AACD,GANM,EAMJ,QANI,CAAP;AAOD","file":"say.js","sourcesContent":["import { map, always, compose, ifElse, pathOr, identity, is, join } from 'ramda'\nimport cl from 'cli-color'\nimport { inspect } from 'util'\n\nconst printers = {\n  error: [ console.error, cl.red.bold ],\n  warn: [ console.warn, cl.yellow.italic ],\n  ok: [ console.log, cl.green ],\n  notice: [ console.log, cl.cyan ],\n  say: [ console.log ],\n};\n\nconst colorlessInspector = (obj) => inspect(obj, { colors: false });\nconst doInspect = ifElse(is(String), identity, colorlessInspector);\nconst hydrate = (...msg) => compose(join(''), map(doInspect))(msg);\n\nexport default function say(options) {\n  const color = pathOr(true, ['parent', 'color'], options);\n\n  return map(([printer, fmt]) => {\n    const boundPrint = printer.bind(console);\n\n    if(!fmt) { return boundPrint; }\n\n    return color ? compose(boundPrint, fmt, hydrate) : boundPrint;\n  }, printers);\n}\n"]}