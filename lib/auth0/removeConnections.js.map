{"version":3,"sources":["../../src/auth0/removeConnections.js"],"names":[],"mappings":";;;;;kBAEwB,iB;;AAFxB;;;;;;AAEe,SAAS,iBAAT,CAA2B,OAA3B,EAAoC;AAAA,MACzC,MADyC,GACqB,OADrB,CACzC,MADyC;AAAA,MACV,OADU,GACqB,OADrB,CACjC,IADiC,CACzB,WADyB,CACV,OADU;AAAA,MACU,IADV,GACqB,OADrB,CACG,GADH,CACU,IADV;;;AAGjD,MAAM,QAAQ,SAAR,KAAQ,CAAC,EAAD;AAAA,WAAQ,6BAA2B,EAA3B,CAAR;AAAA,GAAd;AACA,MAAM,SAAS,SAAT,MAAS,CAAC,EAAD,EAAQ;AACrB,WAAO,WAAP,CAAmB,MAAnB,CAA0B,EAAE,MAAF,EAA1B;AACA,WAAO,EAAP;AACD,GAHD;AAIA,MAAM,mBAAmB,gBAAE,OAAF,CAAU,KAAV,EAAiB,MAAjB,EAAyB,gBAAE,IAAF,CAAO,IAAP,CAAzB,CAAzB;;AAEA,SAAO,QAAQ,GAAR,CAAY,gBAAE,GAAF,CAAM,gBAAN,EAAwB,OAAxB,CAAZ,EACJ,IADI,CACC;AAAA,WAAK,OAAL;AAAA,GADD,CAAP;AAED","file":"removeConnections.js","sourcesContent":["import R from 'ramda'\n\nexport default function removeConnections(context) {\n  const { client, diff: { connections: { removes } }, say: { warn } } = context;\n\n  const print = (id) => warn(`Removed connection ${id}`);\n  const remove = (id) => {\n    client.connections.delete({ id });\n    return id;\n  };\n  const removeConnection = R.compose(print, remove, R.prop('id'));\n\n  return Promise.all(R.map(removeConnection, removes))\n    .then(_ => context);\n}\n"]}