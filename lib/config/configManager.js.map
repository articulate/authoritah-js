{"version":3,"sources":["../../src/config/configManager.js"],"names":[],"mappings":";;;;;kBA4CwB,a;;AA5CxB;;;;AACA;;;;AAEA,IAAM,eAAe,kBAArB;;AAEA,SAAS,KAAT,CAAe,UAAf,EAA2B;AACzB,MAAI;AACF,QAAI,MAAM,aAAG,YAAH,CAAgB,UAAhB,CAAV;AACA,WAAO,KAAK,KAAL,CAAW,GAAX,CAAP;AACD,GAHD,CAGE,OAAM,CAAN,EAAS;AACT,YAAQ,IAAR,WAAqB,UAArB;AACA,WAAO,EAAP;AACD;AACF;;AAED,SAAS,SAAT,CAAmB,MAAnB,EAA2B,UAA3B,EAAuC;AACrC,MAAM,UAAU,KAAK,SAAL,CAAe,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAhB;;AAEA,eAAG,aAAH,CAAiB,UAAjB,EAA6B,OAA7B;AACA,SAAO,MAAP;AACD;;AAED,SAAS,GAAT,CAAa,MAAb,EAAqB,GAArB,EAAoD;AAAA,MAA1B,YAA0B,yDAAX,SAAW;;AAClD,SAAO,sBAAU,YAAV,EAAwB,OAAO,GAAP,CAAxB,CAAP;AACD;;AAED,SAAS,IAAT,CAAc,MAAd,EAAiC;AAAA,oCAAR,MAAQ;AAAR,UAAQ;AAAA;;AAC/B,SAAO,iBAAK,MAAL,EAAa,MAAb,CAAP;AACD;;AAED,SAAS,KAAT,CAAe,MAAf,EAAuB,GAAvB,EAA4B,YAA5B,EAA0C;AACxC,SAAO,sBAAU,OAAO,GAAP,CAAV,EAAuB,YAAvB,CAAP;AACD;;AAED,SAAS,KAAT,CAAe,MAAf,EAAuB,UAAvB,EAAmC;AACjC,SAAO,wCAAqB,UAArB,EAAiC,iBAAK,iBAAK,UAAL,CAAL,EAAuB,MAAvB,CAAjC,CAAP;AACD;;AAED,SAAS,KAAT,CAAe,MAAf,EAAuB;AACrB,OAAI,IAAI,GAAR,IAAe,MAAf,EAAsB;AACpB,YAAQ,GAAR,CAAe,GAAf,SAAsB,OAAO,GAAP,CAAtB;AACD;AACF;;AAEc,SAAS,aAAT,GAA4C;AAAA,MAArB,IAAqB,yDAAd,YAAc;;AACzD,MAAI,SAAS,MAAM,IAAN,CAAb;;AAEA,WAAS,GAAT,CAAa,GAAb,EAAkB,KAAlB,EAAyB;AACvB,WAAO,GAAP,IAAc,KAAd;;AAEA,cAAU,MAAV,EAAkB,IAAlB;AACA,WAAO,KAAP;AACD;;AAED,WAAS,MAAT,CAAgB,GAAhB,EAAqB,YAArB,EAAmC;AACjC,QAAI,QAAQ,OAAO,GAAP,CAAZ;AACA,QAAG,kBAAM,KAAN,CAAH,EAAiB;AAAE,cAAQ,IAAI,GAAJ,EAAS,YAAT,CAAR;AAAiC;;AAEpD,WAAO,KAAP;AACD;;AAED,WAAS,MAAT,GAAyB;AAAA,uCAAN,IAAM;AAAN,UAAM;AAAA;;AACvB,SAAK,OAAL,CAAa,eAAO;AAClB,aAAO,OAAO,GAAP,CAAP;AACD,KAFD;;AAIA,WAAO,UAAU,MAAV,EAAkB,IAAlB,CAAP;AACD;;AAGD,SAAO;AACL,kBADK;AAEL,YAFK;AAGL,kBAHK;AAIL,kBAJK;AAKL,SAAK,oBAAQ,GAAR,EAAa,CAAC,MAAD,CAAb,CALA;AAML,UAAM,oBAAQ,IAAR,EAAc,CAAC,MAAD,CAAd,CAND;AAOL,WAAO,oBAAQ,KAAR,EAAe,CAAC,MAAD,CAAf,CAPF;AAQL,WAAO,oBAAQ,KAAR,EAAe,CAAC,MAAD,CAAf,CARF;AASL,WAAO,oBAAQ,KAAR,EAAe,CAAC,MAAD,CAAf;AATF,GAAP;AAWD","file":"configManager.js","sourcesContent":["import fs from 'fs'\nimport { defaultTo, pick, partial, map, keys, mergeWith, isNil } from 'ramda'\n\nconst DEFAULT_FILE = \".authoritah.json\";\n\nfunction _read(configFile) {\n  try {\n    let raw = fs.readFileSync(configFile);\n    return JSON.parse(raw);\n  } catch(e) {\n    console.warn(`File ${configFile} not found.`);\n    return {};\n  }\n}\n\nfunction _finalize(config, configFile) {\n  const encoded = JSON.stringify(config, null, 2);\n\n  fs.writeFileSync(configFile, encoded);\n  return config;\n}\n\nfunction get(config, key, defaultValue = undefined) {\n  return defaultTo(defaultValue, config[key]);\n}\n\nfunction gets(config, ...keymap) {\n  return pick(keymap, config);\n}\n\nfunction orGet(config, key, primaryValue) {\n  return defaultTo(config[key], primaryValue);\n}\n\nfunction getsd(config, defaultMap) {\n  return mergeWith(defaultTo, defaultMap, pick(keys(defaultMap), config));\n}\n\nfunction print(config) {\n  for(let key in config){\n    console.log(`${key}=${config[key]}`);\n  }\n}\n\nexport default function configManager(path = DEFAULT_FILE) {\n  let config = _read(path);\n\n  function set(key, value) {\n    config[key] = value;\n\n    _finalize(config, path);\n    return value;\n  }\n\n  function getset(key, defaultValue) {\n    let value = config[key];\n    if(isNil(value)) { value = set(key, defaultValue); }\n\n    return value;\n  }\n\n  function remove(...keys) {\n    keys.forEach(key => {\n      delete config[key];\n    });\n\n    return _finalize(config, path);\n  }\n\n\n  return {\n    config,\n    set,\n    remove,\n    getset,\n    get: partial(get, [config]),\n    gets: partial(gets, [config]),\n    getsd: partial(getsd, [config]),\n    orGet: partial(orGet, [config]),\n    print: partial(print, [config]),\n  }\n}\n"]}