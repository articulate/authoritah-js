{"version":3,"sources":["../../src/auth0/parseConnections.js"],"names":[],"mappings":";;;;;kBAkBwB,gB;;AAlBxB;;;;AACA;;;;;;AAEA,IAAM,eAAe,gBAAE,IAAF,CAAO,CACE,MADF,EAEE,IAFF,CAAP,CAArB;;AAKA,IAAM,gBAAgB,gBAAE,IAAF,CAAO,CACE,eADF,EAEE,eAFF,CAAP,CAAtB;;AAKA,SAAS,SAAT,CAAmB,UAAnB,EAA+B;AAC7B,MAAM,SAAS,gBAAE,OAAF,8BAAyB,YAAzB,EAAuC,UAAvC,CAAf;AACA,SAAO,gBAAE,KAAF,CAAQ,MAAR,EAAgB,cAAc,WAAW,OAAzB,CAAhB,CAAP;AACD;;AAEc,SAAS,gBAAT,CAA0B,OAA1B,EAAmC;AAAA,MACxC,WADwC,GACxB,OADwB,CACxC,WADwC;;AAEhD,MAAM,SAAS,gBAAE,GAAF,CAAM,SAAN,EAAiB,WAAjB,CAAf;;AAEA,SAAO,gBAAE,KAAF,CAAQ,aAAR,EAAuB,MAAvB,EAA+B,OAA/B,CAAP;AACD","file":"parseConnections.js","sourcesContent":["import R from 'ramda';\nimport transformName from '../utils/transformUuidName'\n\nconst filterFields = R.pick([\n                              'name',\n                              'id',\n                            ]);\n\nconst filterOptions = R.pick([\n                               \"configuration\",\n                               \"customScripts\"\n                             ]);\n\nfunction transform(connection) {\n  const fields = R.compose(transformName, filterFields)(connection);\n  return R.merge(fields, filterOptions(connection.options));\n}\n\nexport default function parseConnections(context) {\n  const { connections } = context;\n  const parsed = R.map(transform, connections);\n\n  return R.assoc('connections', parsed, context);\n}\n"]}