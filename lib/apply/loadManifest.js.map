{"version":3,"sources":["../../src/apply/loadManifest.js"],"names":[],"mappings":";;;;;kBAWwB,Y;;AAXxB;;;;AACA;;;;AACA;;;;AAEA,SAAS,UAAT,CAAoB,IAApB,EAA0B;AAAA,MAChB,WADgB,GACA,IADA,CAChB,WADgB;;AAExB,MAAM,SAAS,aAAG,YAAH,CAAgB,WAAhB,EAA6B,QAA7B,EAAf;;AAEA,SAAO,oBAAQ,kBAAM,QAAN,EAAgB,MAAhB,CAAR,EAAiC,mBAAO,aAAP,CAAjC,EAAwD,IAAxD,CAAP;AACD;;AAEc,SAAS,YAAT,CAAsB,QAAtB,EAAgC;AAC7C,MAAM,SAAS,SAAS,QAAT,CAAkB,MAAlB,IAA4B,KAAK,KAAjC,GAAyC,iBAAK,IAA7D;AACA,MAAM,WAAW,oBAAQ,MAAR,EAAgB,aAAG,YAAnB,EAAiC,QAAjC,CAAjB;;AAEA,SAAO,UAAS,OAAT,EAAkB;AACvB,WAAO,kBAAM,UAAN,EAAkB,gBAAI,UAAJ,EAAgB,QAAhB,CAAlB,EAA6C,OAA7C,CAAP;AACD,GAFD;AAGD","file":"loadManifest.js","sourcesContent":["import yaml from 'js-yaml'\nimport fs from 'fs'\nimport { compose, assoc, dissoc, map } from 'ramda'\n\nfunction loadScript(rule) {\n  const { script_file } = rule;\n  const script = fs.readFileSync(script_file).toString();\n\n  return compose(assoc('script', script), dissoc('script_file'))(rule);\n}\n\nexport default function loadManifest(filename) {\n  const parser = filename.endsWith(\"json\") ? JSON.parse : yaml.load;\n  const manifest = compose(parser, fs.readFileSync)(filename);\n\n  return function(context) {\n    return assoc('manifest', map(loadScript, manifest), context);\n  }\n}\n"]}