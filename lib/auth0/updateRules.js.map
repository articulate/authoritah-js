{"version":3,"sources":["../../src/auth0/updateRules.js"],"names":[],"mappings":";;;;;kBAGwB,W;;AAHxB;;;;AACA;;;;AAEe,SAAS,WAAT,CAAqB,OAArB,EAA8B;AAAA,MACnC,MADmC,GACuB,OADvB,CACnC,MADmC;AAAA,MACV,OADU,GACuB,OADvB,CAC3B,IAD2B,CACnB,KADmB,CACV,OADU;AAAA,MACU,MADV,GACuB,OADvB,CACG,GADH,CACU,MADV;;;AAG3C,MAAM,QAAQ,SAAR,KAAQ;AAAA,QAAE,IAAF,QAAE,IAAF;AAAA,WAAY,OAAO,eAAP,EAAwB,IAAxB,CAAZ;AAAA,GAAd;AACA,MAAM,gBAAgB,SAAhB,aAAgB,CAAC,IAAD;AAAA,WAAU,OAAO,KAAP,CAAa,MAAb,CAAoB,gBAAE,IAAF,CAAO,CAAC,IAAD,CAAP,EAAe,IAAf,CAApB,EAA0C,mCAAiB,IAAjB,CAA1C,CAAV;AAAA,GAAtB;AACA,MAAM,aAAa,gBAAE,QAAF,CAAW,KAAX,EAAkB,aAAlB,CAAnB;;AAEA,SAAO,QAAQ,GAAR,CAAY,gBAAE,GAAF,CAAM,UAAN,EAAkB,OAAlB,CAAZ,EACJ,IADI,CACC;AAAA,WAAK,OAAL;AAAA,GADD,CAAP;AAED","file":"updateRules.js","sourcesContent":["import R from 'ramda'\nimport { prepareForUpdate } from './prepareRule'\n\nexport default function updateRules(context) {\n  const { client, diff: { rules: { changes } }, say: { notice } } = context;\n\n  const print = ({name}) => notice('Updated rule ', name);\n  const updateWrapper = (rule) => client.rules.update(R.pick(['id'], rule), prepareForUpdate(rule));\n  const updateRule = R.composeP(print, updateWrapper);\n\n  return Promise.all(R.map(updateRule, changes))\n    .then(_ => context);\n}\n"]}