{"version":3,"sources":["../../../src/auth0/rules/addRules.js"],"names":[],"mappings":";;;;;kBAGwB,Q;;AAHxB;;;;AACA;;;;AAEe,SAAS,QAAT,CAAkB,OAAlB,EAA2B;AAAA,MAChC,MADgC,GACmB,OADnB,CAChC,MADgC;AAAA,MACP,IADO,GACmB,OADnB,CACxB,IADwB,CAChB,KADgB,CACP,IADO;AAAA,MACU,EADV,GACmB,OADnB,CACG,GADH,CACU,EADV;;;AAGxC,MAAM,QAAQ,SAAR,KAAQ;AAAA,QAAE,IAAF,QAAE,IAAF;AAAA,WAAY,GAAG,aAAH,EAAkB,IAAlB,CAAZ;AAAA,GAAd;AACA,MAAM,UAAU,gBAAE,OAAF,CAAU,gBAAE,QAAF,CAAW,KAAX,EAAkB,OAAO,KAAP,CAAa,MAA/B,CAAV,gCAAhB;;AAEA,SAAO,QAAQ,GAAR,CAAY,gBAAE,GAAF,CAAM,OAAN,EAAe,IAAf,CAAZ,EACJ,IADI,CACC;AAAA,WAAK,OAAL;AAAA,GADD,CAAP;AAED","file":"addRules.js","sourcesContent":["import R from 'ramda'\nimport { prepareForCreate } from './prepareRule'\n\nexport default function addRules(context) {\n  const { client, diff: { rules: { adds } }, say: { ok } } = context;\n\n  const print = ({name}) => ok('Added rule ', name);\n  const addRule = R.compose(R.composeP(print, client.rules.create), prepareForCreate);\n\n  return Promise.all(R.map(addRule, adds))\n    .then(_ => context);\n}\n"]}