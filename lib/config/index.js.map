{"version":3,"sources":["../../src/config/index.js"],"names":[],"mappings":";;;;;;;;kBAoCwB,K;;AApCxB;;AACA;;;;AACA;;;;;;AAEA,IAAM,gBAAgB;AACpB,KADoB,eAChB,IADgB,EACV,OADU,EACD;AAAA,QACT,MADS,GACE,OADF,CACT,MADS;;;AAGjB,SAAK,OAAL,CAAa,mBAAW;AAAA,2BACL,QAAQ,KAAR,CAAc,GAAd,CADK;;AAAA;;AAAA,UACjB,GADiB;AAAA,UACZ,GADY;;AAEtB,aAAO,GAAP,CAAW,GAAX,EAAgB,GAAhB;AACD,KAHD;AAID,GARmB;AAUpB,KAVoB,eAUhB,IAVgB,EAUV,OAVU,EAUD;AAAA,QACT,MADS,GACgB,OADhB,CACT,MADS;AAAA,QACM,GADN,GACgB,OADhB,CACD,GADC,CACM,GADN;;;AAGjB,QAAG,KAAK,MAAL,IAAe,CAAlB,EAAqB;AACnB,UAAI,OAAO,GAAP,CAAW,KAAK,CAAL,CAAX,CAAJ;AACD,KAFD,MAEO;AACL,WAAK,OAAL,CAAa,eAAO;AAClB,YAAM,QAAQ,OAAO,GAAP,CAAW,GAAX,CAAd;AACA,YAAO,GAAP,SAAc,KAAd;AACD,OAHD;AAID;AACF,GArBmB;AAuBpB,IAvBoB,cAuBjB,IAvBiB,EAuBX,MAvBW,EAuBH;AACf,WAAO,MAAP,CAAc,IAAd;AACD,GAzBmB;AA2BpB,OA3BoB,iBA2Bd,IA3Bc,EA2BR,MA3BQ,EA2BA;AAClB,WAAO,KAAP;AACD;AA7BmB,CAAtB;;AAgCe,SAAS,KAAT,CAAe,OAAf,EAAwB,IAAxB,EAA8B,OAA9B,EAAuC;AACpD,MAAM,SAAS,cAAc,OAAd,CAAf;;AADoD,aAElC,mBAAI,OAAJ,CAFkC;;AAAA,MAE5C,KAF4C,QAE5C,KAF4C;;;AAIpD,SAAO,uBAAQ,OAAR,EACJ,IADI,CACC,oBAAQ,MAAR,EAAgB,CAAC,IAAD,CAAhB,CADD,EAEJ,KAFI,CAEE,KAFF,CAAP;AAGD","file":"index.js","sourcesContent":["import { partial } from 'ramda'\nimport loadEnv from '../utils/loadEnv'\nimport say from '../utils/say'\n\nconst configActions = {\n  set(args, context) {\n    const { config } = context;\n\n    args.forEach(setting => {\n      let [key, val] = setting.split('=');\n      config.set(key, val);\n    });\n  },\n\n  get(args, context) {\n    const { config, say: { say } } = context;\n\n    if(args.length == 1) {\n      say(config.get(args[0]));\n    } else {\n      args.forEach(key => {\n        const value = config.get(key);\n        say(`${key}=${value}`);\n      });\n    }\n  },\n\n  rm(args, config) {\n    config.remove(args);\n  },\n\n  print(args, config) {\n    config.print();\n  },\n};\n\nexport default function index(command, args, options) {\n  const action = configActions[command];\n  const { error } = say(options);\n\n  return loadEnv(options)\n    .then(partial(action, [args]))\n    .catch(error);\n}\n"]}