{"version":3,"sources":["../../src/dump/index.js"],"names":[],"mappings":";;;;;kBAOwB,K;;AAPxB;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;AAEe,SAAS,KAAT,CAAe,QAAf,EAAyB,OAAzB,EAAkC;AAAA,MACvC,MADuC,GAC5B,OAD4B,CACvC,MADuC;;AAAA,aAEzB,mBAAI,OAAJ,CAFyB;;AAAA,MAEvC,KAFuC,QAEvC,KAFuC;AAAA,MAEhC,EAFgC,QAEhC,EAFgC;;;AAI/C,MAAM,MAAM,UAAU,MAAV,GAAmB,MAAnB,GAA4B,KAAxC;AACA,MAAM,WAAW,WAAW,QAAX,cAA+B,GAAhD;;AAEA,SAAO,uBAAQ,OAAR,EACJ,IADI,wBAEJ,IAFI,uBAGJ,IAHI,CAGC,yBAAU,QAAV,CAHD,EAIJ,IAJI,CAIC,yBAAuB,QAAvB,CAJD,EAKJ,KALI,CAKE,KALF,CAAP;AAMD","file":"index.js","sourcesContent":["import loadEnv from '../utils/loadEnv'\nimport setupClient from '../utils/setupClient'\nimport say from '../utils/say'\n\nimport fetchRules from '../auth0/fetchRules'\nimport saveRules from './saveRules'\n\nexport default function index(filePath, options) {\n  const { format } = options;\n  const { error, ok } = say(options);\n\n  const ext = format == \"json\" ? \"json\" : \"yml\"\n  const filename = filePath ? filePath : `rules.${ext}`;\n\n  return loadEnv(options)\n    .then(setupClient)\n    .then(fetchRules)\n    .then(saveRules(filename))\n    .then(ok(`Rules written to ${filename}`))\n    .catch(error);\n}\n"]}